/* automatically generated by rust-bindgen 0.69.1 */

#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum hiprtcResult {
    HIPRTC_SUCCESS = 0,
    HIPRTC_ERROR_OUT_OF_MEMORY = 1,
    HIPRTC_ERROR_PROGRAM_CREATION_FAILURE = 2,
    HIPRTC_ERROR_INVALID_INPUT = 3,
    HIPRTC_ERROR_INVALID_PROGRAM = 4,
    HIPRTC_ERROR_INVALID_OPTION = 5,
    HIPRTC_ERROR_COMPILATION = 6,
    HIPRTC_ERROR_BUILTIN_OPERATION_FAILURE = 7,
    HIPRTC_ERROR_NO_NAME_EXPRESSIONS_AFTER_COMPILATION = 8,
    HIPRTC_ERROR_NO_LOWERED_NAMES_BEFORE_COMPILATION = 9,
    HIPRTC_ERROR_NAME_EXPRESSION_NOT_VALID = 10,
    HIPRTC_ERROR_INTERNAL_ERROR = 11,
    HIPRTC_ERROR_LINKING = 100,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum hiprtcJIT_option {
    HIPRTC_JIT_MAX_REGISTERS = 0,
    HIPRTC_JIT_THREADS_PER_BLOCK = 1,
    HIPRTC_JIT_WALL_TIME = 2,
    HIPRTC_JIT_INFO_LOG_BUFFER = 3,
    HIPRTC_JIT_INFO_LOG_BUFFER_SIZE_BYTES = 4,
    HIPRTC_JIT_ERROR_LOG_BUFFER = 5,
    HIPRTC_JIT_ERROR_LOG_BUFFER_SIZE_BYTES = 6,
    HIPRTC_JIT_OPTIMIZATION_LEVEL = 7,
    HIPRTC_JIT_TARGET_FROM_HIPCONTEXT = 8,
    HIPRTC_JIT_TARGET = 9,
    HIPRTC_JIT_FALLBACK_STRATEGY = 10,
    HIPRTC_JIT_GENERATE_DEBUG_INFO = 11,
    HIPRTC_JIT_LOG_VERBOSE = 12,
    HIPRTC_JIT_GENERATE_LINE_INFO = 13,
    HIPRTC_JIT_CACHE_MODE = 14,
    HIPRTC_JIT_NEW_SM3X_OPT = 15,
    HIPRTC_JIT_FAST_COMPILE = 16,
    HIPRTC_JIT_GLOBAL_SYMBOL_NAMES = 17,
    HIPRTC_JIT_GLOBAL_SYMBOL_ADDRESS = 18,
    HIPRTC_JIT_GLOBAL_SYMBOL_COUNT = 19,
    HIPRTC_JIT_LTO = 20,
    HIPRTC_JIT_FTZ = 21,
    HIPRTC_JIT_PREC_DIV = 22,
    HIPRTC_JIT_PREC_SQRT = 23,
    HIPRTC_JIT_FMA = 24,
    HIPRTC_JIT_NUM_OPTIONS = 25,
    HIPRTC_JIT_IR_TO_ISA_OPT_EXT = 10000,
    HIPRTC_JIT_IR_TO_ISA_OPT_COUNT_EXT = 10001,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum hiprtcJITInputType {
    HIPRTC_JIT_INPUT_CUBIN = 0,
    HIPRTC_JIT_INPUT_PTX = 1,
    HIPRTC_JIT_INPUT_FATBINARY = 2,
    HIPRTC_JIT_INPUT_OBJECT = 3,
    HIPRTC_JIT_INPUT_LIBRARY = 4,
    HIPRTC_JIT_INPUT_NVVM = 5,
    HIPRTC_JIT_NUM_LEGACY_INPUT_TYPES = 6,
    HIPRTC_JIT_INPUT_LLVM_BITCODE = 100,
    HIPRTC_JIT_INPUT_LLVM_BUNDLED_BITCODE = 101,
    HIPRTC_JIT_INPUT_LLVM_ARCHIVES_OF_BUNDLED_BITCODE = 102,
    HIPRTC_JIT_NUM_INPUT_TYPES = 9,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ihiprtcLinkState {
    _unused: [u8; 0],
}
pub type hiprtcLinkState = *mut ihiprtcLinkState;
extern "C" {
    pub fn hiprtcGetErrorString(result: hiprtcResult) -> *const ::core::ffi::c_char;
}
extern "C" {
    pub fn hiprtcVersion(
        major: *mut ::core::ffi::c_int,
        minor: *mut ::core::ffi::c_int,
    ) -> hiprtcResult;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _hiprtcProgram {
    _unused: [u8; 0],
}
pub type hiprtcProgram = *mut _hiprtcProgram;
extern "C" {
    pub fn hiprtcAddNameExpression(
        prog: hiprtcProgram,
        name_expression: *const ::core::ffi::c_char,
    ) -> hiprtcResult;
}
extern "C" {
    pub fn hiprtcCompileProgram(
        prog: hiprtcProgram,
        numOptions: ::core::ffi::c_int,
        options: *mut *const ::core::ffi::c_char,
    ) -> hiprtcResult;
}
extern "C" {
    pub fn hiprtcCreateProgram(
        prog: *mut hiprtcProgram,
        src: *const ::core::ffi::c_char,
        name: *const ::core::ffi::c_char,
        numHeaders: ::core::ffi::c_int,
        headers: *mut *const ::core::ffi::c_char,
        includeNames: *mut *const ::core::ffi::c_char,
    ) -> hiprtcResult;
}
extern "C" {
    pub fn hiprtcDestroyProgram(prog: *mut hiprtcProgram) -> hiprtcResult;
}
extern "C" {
    pub fn hiprtcGetLoweredName(
        prog: hiprtcProgram,
        name_expression: *const ::core::ffi::c_char,
        lowered_name: *mut *const ::core::ffi::c_char,
    ) -> hiprtcResult;
}
extern "C" {
    pub fn hiprtcGetProgramLog(prog: hiprtcProgram, log: *mut ::core::ffi::c_char) -> hiprtcResult;
}
extern "C" {
    pub fn hiprtcGetProgramLogSize(prog: hiprtcProgram, logSizeRet: *mut usize) -> hiprtcResult;
}
extern "C" {
    pub fn hiprtcGetCode(prog: hiprtcProgram, code: *mut ::core::ffi::c_char) -> hiprtcResult;
}
extern "C" {
    pub fn hiprtcGetCodeSize(prog: hiprtcProgram, codeSizeRet: *mut usize) -> hiprtcResult;
}
extern "C" {
    pub fn hiprtcGetBitcode(prog: hiprtcProgram, bitcode: *mut ::core::ffi::c_char)
        -> hiprtcResult;
}
extern "C" {
    pub fn hiprtcGetBitcodeSize(prog: hiprtcProgram, bitcode_size: *mut usize) -> hiprtcResult;
}
extern "C" {
    pub fn hiprtcLinkCreate(
        num_options: ::core::ffi::c_uint,
        option_ptr: *mut hiprtcJIT_option,
        option_vals_pptr: *mut *mut ::core::ffi::c_void,
        hip_link_state_ptr: *mut hiprtcLinkState,
    ) -> hiprtcResult;
}
extern "C" {
    pub fn hiprtcLinkAddFile(
        hip_link_state: hiprtcLinkState,
        input_type: hiprtcJITInputType,
        file_path: *const ::core::ffi::c_char,
        num_options: ::core::ffi::c_uint,
        options_ptr: *mut hiprtcJIT_option,
        option_values: *mut *mut ::core::ffi::c_void,
    ) -> hiprtcResult;
}
extern "C" {
    pub fn hiprtcLinkAddData(
        hip_link_state: hiprtcLinkState,
        input_type: hiprtcJITInputType,
        image: *mut ::core::ffi::c_void,
        image_size: usize,
        name: *const ::core::ffi::c_char,
        num_options: ::core::ffi::c_uint,
        options_ptr: *mut hiprtcJIT_option,
        option_values: *mut *mut ::core::ffi::c_void,
    ) -> hiprtcResult;
}
extern "C" {
    pub fn hiprtcLinkComplete(
        hip_link_state: hiprtcLinkState,
        bin_out: *mut *mut ::core::ffi::c_void,
        size_out: *mut usize,
    ) -> hiprtcResult;
}
extern "C" {
    pub fn hiprtcLinkDestroy(hip_link_state: hiprtcLinkState) -> hiprtcResult;
}
